"""
Data Scientist Jr.: Karina Gon√ßalves Soares

Objetivo: Nest script fazemos uma raspagem de informa√ß√µes 
          num site da internet (imdb.com). Depois de coletar as 
          informa√ß√µes salvamos os Dados num arquivo CSV ü§ó.

OBS: As vezes o site demora ou d√° erro no retorno.
     Tente v√°rias vezes a execu√ß√£o do script.          
"""
import requests # Faz solicita√ß√µes HTTP
from bs4 import BeautifulSoup # Extrai informa√ß√µes espec√≠ficadas do conte√∫do HTML de uma p√°gina web.
import pandas as pd

# Definir o cabe√ßalho de usu√°rio
# "User-Agent". Esse cabe√ßalho √© comumente usado em solicita√ß√µes HTTP para identificar o cliente que est√° fazendo a solicita√ß√£o.
# Ao especificar um user-agent, voc√™ pode simular um navegador ou dispositivo espec√≠fico e receber a resposta apropriada do servidor.
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
}

# Recupere o conte√∫do HTML do site
url = 'https://www.imdb.com/chart/top/?ref_=nv_mv_250' # p√°gina que desejo acessar

#Nesta linha, √© feita uma solicita√ß√£o GET para a URL especificada. A fun√ß√£o requests.get() √© usada para enviar a solicita√ß√£o HTTP e obter a resposta do servidor.
response = requests.get(url, headers=headers) 
print(response)

# Analisar o conte√∫do HTML retornado pela solicita√ß√£o HTTP.
soup = BeautifulSoup(response.text, 'html.parser')

# Encontre todos os elementos do filme
movies = soup.find_all('td', class_='titleColumn')


# Extraia as informa√ß√µes desejadas
# criando uma lista de dicion√°rios, onde cada dicion√°rio representa um filme e cont√©m as informa√ß√µes de t√≠tulo e ano.
data = []
for movie in movies:
    title = movie.find('a').text
    year = movie.find('span', class_='secondaryInfo').text
    data.append({'title': title, 'year': year})


# Criamos um DataFrame e salvamos em um CSV
df = pd.DataFrame(data)
print(df.head())
df.to_csv('imdb_top_movies.csv', index=False) 
# A linha df.to_csv('imdb_top_movies.csv', index=False) salva o DataFrame em um arquivo CSV chamado "imdb_top_movies.csv". 
# O par√¢metro index=False √© usado para evitar que o √≠ndice do DataFrame seja salvo como uma coluna no arquivo CSV.
